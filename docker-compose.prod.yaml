version: '3.8'
services:
  # nginx:
  #   build: ./nginx  # Builds Nginx from the Dockerfile in ./nginx directory
  #   ports:
  #     - "1337:80"  # Expose Nginx on port 1337
  #   depends_on:
  #     - web  # Ensure the web service (backend) is ready before Nginx starts
  #   volumes:
  #     - media_volume:/usr/src/backend/media  # Correct path to media volume (do not change)
      
  web:
    build: ./backend
    command: sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn django_backend.wsgi:application --bind 0.0.0.0:8010 --log-level debug"
    volumes:
      - ./backend:/usr/src/backend
      - media_volume:/usr/src/backend/media  # Correct path to media volume
    expose:
      - 8010
    env_file:
      - ./.env
    depends_on:
      - db
      - daphne

  daphne:
    build: ./backend
    command: daphne --bind 0.0.0.0 -p 8002 django_backend.asgi:application
    ports:
      - 8002:8002

  db:
    image: postgres:15
    volumes:
      - /postgres_data/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=djangodb

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    

  celery:
    build:
      context: ./backend  # Adjust to point to the correct directory containing Dockerfile
    container_name: celery
    command: celery -A django_backend worker --loglevel=info
    volumes:
      - ./backend:/usr/src/backend
    depends_on:
      - redis

  celery_beat:
    build:
      context: ./backend
    container_name: celery_beat
    command: celery -A django_backend beat --loglevel=info
    volumes:
      - ./backend:/usr/src/backend
    depends_on:
      - redis
      - celery

volumes:
  postgres_data:
  media_volume:
